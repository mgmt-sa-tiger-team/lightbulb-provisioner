---
- name: set facts on pairs
  set_fact:
    tower_public_ip: "{{ hostvars[item]['ec2_ip_address'] }}"
    tower_private_ip: "{{ hostvars[item]['ec2_private_ip_address'] }}"
    tower_dns_name: "{{ hostvars[item]['ec2_private_dns_name'] }}"
  with_items: "{{ groups['tag_pod_' + ec2_tag_pod] }}"
  when: (hostvars[item]['ec2_tag_role'] == 'tower')

- name: debug variable
  debug:
    msg: "tower public ip: {{ tower_public_ip }}"


- name: add tower to /etc/hosts on cfme
  lineinfile:
    dest: /etc/hosts
    line: "{{ tower_private_ip }} {{ tower_dns_name }} tower"

- name: get cert
  command: cat /etc/tower/tower.cert
  register: towercert
  delegate_to: "{{ tower_public_ip }}"

- name: towercrt
  lineinfile:
    dest: /etc/pki/ca-trust/source/anchors/tower.crt
    line: "{{ towercert.stdout }}"
    create: yes
  register: towercrt
  retries: 10
  until: towercrt|success
  ignore_errors: yes
  delay: 5

- name: update certs
  shell: update-ca-trust

- name: create tower provider
  uri:
    url: "https://{{ inventory_hostname }}/api/providers?provider_class=provider"
    method: "POST"
    user: "admin"
    password: "{{ cfme_pass }}"
    validate_certs: no
    body_format: json
    body: "{{ lookup('template', 'tower_provider.json.j2') | to_json }}"
  ignore_errors: yes

- name: create cfme creds
  command: tower-cli credential create -n cloudforms --kind cloudforms --username admin  --password {{ cfme_pass }} --host https://{{ inventory_hostname }} --organization Default
  register: cfmecreds
  retries: 10
  until: cfmecreds.rc == 0
  ignore_errors: yes
  delay: 5
  delegate_to: "{{ tower_public_ip }}"

- name: create cfme inventory
  command: tower-cli inventory create -n cloudforms --organization=Default
  register: cfmeinvent
  retries: 10
  until: cfmeinvent.rc == 0
  ignore_errors: yes
  delay: 5
  delegate_to: "{{ tower_public_ip }}"

- name: create cfme group
  command: tower-cli group create -n cloudforms --credential cloudforms -i cloudforms --source cloudforms
  register: cfmegroup
  retries: 10
  until: cfmegroup.rc == 0
  ignore_errors: yes
  delay: 5
  delegate_to: "{{ tower_public_ip }}"

- name: wait for cloudforms to do a provider refresh
  pause:
    minutes: 1

- name: cfme inventory sync
  command: tower-cli group sync cloudforms
  register: cfmesync
  retries: 10
  until: cfmesync.rc == 0
  ignore_errors: yes
  delay: 5
  delegate_to: "{{ tower_public_ip }}"
